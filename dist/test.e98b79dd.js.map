{"version":3,"sources":["node_modules/apple-scroller/index.js","test.js","node_modules/parcel/src/builtins/bundle-url.js","node_modules/parcel/src/builtins/css-loader.js"],"names":["appleScroller","require","container1","document","getElementById","appleScroll1","imgs","addEventListener","redraw","container2","appleScroll2","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"AAAA,AEAA,ACAA,IDAIW,ACAAY,MAAM,GDAG,ACAAtB,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;AHCA;AACA,AEDA,ACCA,AFCA,SCFSW,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AFE9B,AEDE,ACCA,MDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;AHCF,AEDIhB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AFEJ,AEDG,ACADa,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AHE/B,AGDIH,AFLJ,IEKIA,AFLEzB,IEKE,CAAC6B,MAAL,EFLe,GAAG5B,OAAO,CAAC,gBAAD,CAA7B;ADOA,AEDE,ACAC,GAFD,MDEOU,SAAP;AFEF,AEDC,ADNDV,OAAO,CAAC,0BAAD,CAAP;ADQA,AGFEyB,EAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;AHGF,AEDA,ACDER,AFHF,EEGEA,EFHEvB,EEGE,CAACgC,EDCErB,KDJK,GEGZ,AFHeV,CEGCgC,GDClB,GAAwB,CDJC,CAAC/B,IEGxB,CAA6BsB,OAA7B,EAAsCD,AFHvB,CAAwB,GEGG,CAACW,KFH5B,CAAjB,KEGE;AHGF,AEDE,ACDD,AFHD,IAAI/B,YAAY,GAAG,IAAIL,aAAJ,CAAkBE,UAAlB,EAA8BI,SAA9B,EAAoC,OAApC,CAAnB;ADMA,AEDE,ADJFH,MCIM,EDJE,CAACC,cAAT,CAAwB,QAAxB,EAAkCG,gBAAlC,CAAmD,OAAnD,EAA4D,YAAI;ADMhE,AEDI,ACDJ,AFJiEF,EAAAA,EEI7DgC,MDCM,IAAIvB,ACDA,AFJ+D,CAACN,EEI7D,EDCP,EAAN,ACDJ,AFJiE,CAAoBH,YAApB;ADOjE,AEDG,ADNgG,CAAnG,ECIE,CAEE,OAAOU,GAAP,EAAY;AFEhB,AEDI,ACFJ,AFHA,IAAIN,ICKIO,CCFCsB,KFHK,CCKC,EDLEnC,CCKC,ACFlB,CDEmB,ECFE,GDEGY,CDLC,CAACX,CCKC,CAACa,KAAV,EAAiBC,KAAjB,ADLD,CCKwB,ADLA,SAAxB,CAAjB,qDCKkB,CAAd;AFEJ,AGHE,AFHF,IAAIR,EEGE2B,UAAJ,AFHc,EEGE,CFHC,IAAIrC,aAAJ,CAAkBS,UAAlB,EAA8BH,SAA9B,EAAoC,QAApC,CAAnB;ADOA,AEFI,ACDA,QDCIU,OAAJ,EAAa;AFGjB,AEFM,ACDH,aDCUG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AFGN,AEFK;AFGL,AEFG,ACDDqB,EAAAA,UAAU,GAAGE,UAAU,CAAC,YAAY;AHItC,AGHI,QAAIC,KAAK,GAAGrC,QAAQ,CAACsC,gBAAT,CAA0B,wBAA1B,CAAZ;AHIJ,AEFE,SAAO,GAAP;AFGF,AEFC,ACFG,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AHK3C,AGJM,UAAInB,MAAM,CAACJ,UAAP,CAAkBqB,KAAK,CAACE,CAAD,CAAL,CAASZ,IAA3B,MAAqCP,MAAM,CAACV,YAAP,EAAzC,EAAgE;AHKtE,AEFA,ACFQW,QAAAA,CDECL,SCFS,CDElB,ACFmBqB,CDECpB,GAApB,CCFwB,CDEC,ACFAsB,CAAD,CAAN,CAAV;AHKR,AEFE,ACFK,SDEE,CAAC,KAAKtB,GAAN,EAAWC,OAAX,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AFGF,AEFC,ACFI;AHKL;AACA,AEFAC,ACFIe,IAAAA,GDEG,CAACxB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AFGA,AEFAU,ACFG,GATsB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,UDWF,GAAqBA,UAArB;AFGA,AGJC;AHKD;AACA,AGJAyB,MAAM,CAACtB,OAAP,GAAiBgB,SAAjB;AHKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"test.e98b79dd.js","sourceRoot":"..","sourcesContent":["class appleScroller {\n\n  constructor (wrapper, imgs, scrollHeight) {\n\n    this.wrapper = wrapper\n    this.imgs = imgs\n\n    // height of scroll area. don't use different units between these\n    this.scrollHeight = scrollHeight\n\n    this.index = 0\n    this.frameLength = 0\n    this.img = new Image()\n    this.html = document.documentElement\n    this.preloadImages()\n    this.initContainer()\n    this.initCanvas()\n\n    this.img.src = this.getFrame(1)\n    this.img.onload = () => {this.fillImage(this.img)}\n    this.addScrollListener()\n  }\n\n  getFrame (index) {\n    return this.imgs[index.toString()]\n  }\n  preloadImages () {\n    Object.keys(this.imgs).forEach((key, ind) => {\n      const img = new Image\n      img.src = this.getFrame(ind)\n      this.frameLength += 1\n    })\n  }\n\n  initContainer () {\n    this.wrapper.innerHTML = ''\n    this.container = document.createElement('div')\n    this.wrapper.appendChild(this.container)\n    this.container.classList.add('apple-scroller-container')\n    this.wrapper.style.height = this.scrollHeight\n    this.container.style.height = this.scrollHeight\n  }\n  initCanvas () {\n    const canvas = document.createElement('canvas')\n    this.canvas = canvas\n    this.container.appendChild(canvas)\n    this.canvas.classList.add('apple-scroller-canvas')\n    this.context = canvas.getContext('2d')\n\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = canvas.offsetWidth\n    canvas.height = canvas.offsetHeight\n  }\n\n  fillImage (img) {\n    let scale = Math.max(this.canvas.width/img.width, this.canvas.height/img.height)\n    this.context.drawImage(img, 0, 0, img.width*scale, img.height*scale)\n  }\n  update (idx) {\n    this.img.src = this.getFrame(idx)\n    this.fillImage(this.img)\n  }\n\n  addScrollListener () {\n    window.addEventListener('scroll', () => {\n      const scrollTop = Math.max(this.html.scrollTop - this.wrapper.offsetTop, 0)\n      const maxScrollTop = this.container.scrollHeight - window.innerHeight\n      const scrollFraction = Math.min(scrollTop / maxScrollTop, 1)\n      this.index = Math.min(\n        this.frameLength - 1,\n        Math.ceil(scrollFraction * this.frameLength)\n      )\n      requestAnimationFrame(() => this.update(this.index + 1))\n    })\n  }\n\n  redraw (self) {\n    self.initContainer()\n    self.initCanvas()\n    self.addScrollListener()\n    this.img.src = this.getFrame(this.index)\n    this.img.onload = () => {this.fillImage(this.img)}\n  }\n}\n\nmodule.exports = appleScroller","const appleScroller = require('apple-scroller')\nrequire('apple-scroller/style.css')\n\nimport imgs from './render/*.png'\n\nlet container1 = document.getElementById('scroll1') \nlet appleScroll1 = new appleScroller(container1, imgs, '300vh')\ndocument.getElementById('redraw').addEventListener('click', ()=>{appleScroll1.redraw(appleScroll1)})\n\nlet container2 = document.getElementById('scroll2')\nlet appleScroll2 = new appleScroller(container2, imgs, '1000vh')","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}